name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger the pipeline on pushes to the master branch

jobs:
  # Job to install dependencies and run API tests
  api-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Set Node.js version as needed
      - name: Install dependencies for API tests
        working-directory: ./API-Automation  # Point to the API-Automation folder
        run: npm install
      - name: Run API tests
        working-directory: ./API-Automation  # Point to the API-Automation folder
        run: npm run test:api  # Ensure this matches your API test script

  # Job to install dependencies and run UI tests (Cypress)
  ui-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Set Node.js version as needed
      - name: Install dependencies for UI tests
        working-directory: ./UI-Automation  # Point to the UI-Automation folder
        run: npm install
      - name: Run UI tests
        working-directory: ./UI-Automation  # Point to the UI-Automation folder
        run: npm run test:ui  # Ensure this matches your UI test script

  # Job to deploy if tests pass
  deploy:
    runs-on: ubuntu-latest
    needs: [api-test, ui-test]  # Run deploy job only after both API and UI tests pass
    if: success()  # Only deploy if both tests pass
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Production
        run: ./deploy.sh  # Replace with your deployment script or commands
